version: 2.1
description: >
  deploy
orbs:
  slack: circleci/slack@3.2.0
  aws-cli: circleci/aws-cli@0.1.20
  aws-s3: circleci/aws-s3@1.0.11
executors:
  default:
    docker:
      - image: circleci/node:12.16.3
        auth:
          username: $DOCKERHUB_USER
          password: $DOCKERHUB_PASSWORD
        environment:
          NODE_OPTIONS: --max_old_space_size=2560
          TZ: "Asia/Tokyo"
    working_directory: ~/workspace
commands:
  init:
    steps:
      - attach_workspace:
          at: .
  save_workspace:
    steps:
      - persist_to_workspace:
          root: .
          paths:
            - .
jobs:
  build:
    executor: default
    steps:
      - checkout
      - init
      # Load submodules
      # - run: git submodule sync
      # - run: git submodule update --init
      - restore_cache:
          keys:
            - v2-dependencies-{{ checksum "package-lock.json" }}
            - v2-dependencies-
      - run:
          name: Install Packages
          command: npm install
      - save_cache:
          paths:
            - node_modules
          key: v2-dependencies-{{ checksum "package-lock.json" }}
      - run:
          name: Build Packages(S3)
          command: yarn build
      - save_workspace
      - run:
          name: Failed To Build
          command: |
            echo "Failed TO Build the Project";
          when: on_fail
  deploy:
    executor: default
    parameters:
      deploy-env:
        type: enum
        enum: ["develop", "production"]
    steps:
      - init
      - slack/notify:
          color: good
          title: "puzzlepang deploy"
          # title_link: "${BASE_URL}/branch/${CIRCLE_BRANCH}"
          message: "Starting to deploy (<< parameters.deploy-env >>)"
      - run:
          name: "get date"
          command: VERSION="$(date +'%Y-%m-%d')"
      - aws-cli/install
      - aws-cli/setup
      - run:
          name: "Deploy to S3"
          command: |
            VERSION="$(date +'%Y-%m-%d')"
            aws s3 sync ~/workspace/build $BUCKET_NAME
            aws s3 cp $BUCKET_NAME/$VERSION/index.html $VERSION/index.html --content-type 'text/html; charset=utf-8' --metadata-directive REPLACE
          #  aws cloudfront create-invalidation --distribution-id ${CF_DISTRIBUTION} --paths '/*'
      - slack/notify:
          color: good
          title: "puzzlepang deploy"
          message: "Deploy succeeded (<< parameters.deploy-env >>)"
          footer: "$VERSION"

workflows:
  all:
    jobs:
      - build
      - deploy:
          name: deploy-develop
          deploy-env: develop
          requires:
            - build
          filters:
            branches:
              only:
                - ham90